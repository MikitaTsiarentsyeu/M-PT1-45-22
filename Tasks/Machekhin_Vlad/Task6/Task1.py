# 1. Написать рекурсивную функцию для вычисления суммы всех элементов вложенных (любая глубина) списков.
# Пример списка (синтаксис Python): [1, 2, [2, 4, [[7, 8], 4, 6]]], сумма элементов - 34

# 2. Написать рекурсивную функцию для вычисления n первых чисел Фибоначчи.
# Примеры вызова: 
# fib(5) -> 0,1,1,2,3
# fib(10) -> 0,1,1,2,3,5,8,13,21,34

# 3. ['1', '11', '12', '22', '2', '13', '30', '33'] - отсортировать список по возрастанию числовых значений, исключив те, квадраты которых являются нечётными числами

#Task1
def sum(list):
    total = 0
    for i in list:
        if type(i) == type(list):
            total = total + sum(i)
        else:
            total = total + i
    return total

print(sum([1, 2, [2, 4, [[7, 8], 4, 6]]]))

#Task2
def fib(n):     
    if n == 1:
        return [0, 1]    
    res = fib(n-1)
    res.append(res[-1]+res[-2])
    return res
print(fib(10)) 


#Classwork
lst = ['1', '11', '12', '22', '2', '13', '30', '33']
kek = sorted(int(i) for i in lst)
kek = list(filter(lambda x: x*x%2==0, kek))
print([str(i) for i in kek])
