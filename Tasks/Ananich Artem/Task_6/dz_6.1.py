# 1. Написать рекурсивную функцию для вычисления суммы всех элементов вложенных (любая глубина) списков.
# Пример списка (синтаксис Python): [1, 2, [2, 4, [[7, 8], 4, 6]]], сумма элементов - 34

# 2. Написать рекурсивную функцию для вычисления n первых чисел Фибоначчи.
# Примеры вызова: 
# fib(5) -> 0,1,1,2,3
# fib(10) -> 0,1,1,2,3,5,8,13,21,34


#1
l = [1, 2, [2, 4, [[7, 8], 4, 6]]]
sum = 0
def summ(lis):
    for i in lis:
        if not isinstance(i,list):#если i попадает не на список то мы начинаем суммирование
            global sum #используем global чтоб сумма не обнулялась при рекурсивном вызове функции
            sum += i
        else:
            summ(i)#а если на список то вызываем рекурсивно нашу функцию
    return sum
print('Summ is: ',summ(l))    



#2
def fibonacci(n):
    if (n <= 1):
        return n #если n = 1 или меньше, выходим из рекурсии
    else:
        return (fibonacci(n-1) + fibonacci(n-2))#рекурсивно вызываем нашу 
                                                #функцию чтоб посчитать сумму 2 чисел

for i in range(1,8):
    print(f'{i}-ое число равно:',(fibonacci(i)))#выводим на экран все числа фибоначчи, до того 
                                                #индекса который передается в функцию


